;
;----------------------------------------------------------
; m65 - fs65sbc simple monitor
;----------------------------------------------------------
; at24c.a65 - i2c eeprom related routines
; by Fabio Sturman (c) 2019,2023
; fabio.sturman@gmail.com
;----------------------------------------------------------
;
; AT24C256 read/write
;
AT24C256	:= $a0
;
mode	:= add
page	:= len
dmapo	:= data
counter	:= ra
;
at24c_rd:
	jsr i2c_init	;to idle state
	jsr i2c_start
	lda #AT24C256
	jsr i2c_write
	beq @qe
	lda page+1
	jsr i2c_write
	beq @qe 
	lda page
	jsr i2c_write
	beq @qe
	jsr i2c_stop
;
	jsr i2c_start
	lda #AT24C256+1
	jsr i2c_write
@l:
	jsr i2c_read
	sta (dmapo)
	jsr i2c_ack
	inc_x dmapo
	dec_x counter
	bne @l
	jsr i2c_nack
	jsr i2c_stop
	lda #0
	bra @q
@qe:
	jsr i2c_init	;idle & return error
	lda #$a0
@q:
	rts
;
;
;
at24c_wr:
	jsr i2c_init
	jsr i2c_start
	lda #AT24C256
	jsr i2c_write
	beq @qe                
	lda page+1
	jsr i2c_write
	beq @qe
	lda page
	jsr i2c_write
	beq @qe
@l:
	lda (dmapo)
	jsr i2c_write
	beq @qe
	inc_x dmapo
	dec_x counter
	bne @l
	jsr i2c_stop
	lda #0
	bra @q
@qe:
	jsr i2c_init	;error
	lda #$a1
@q:
	rts
;
; Q<0|1><p><a> r/w i2c 0=w 1=r  p=page64
; add=r/w, len=p, data=a
;
cmd_at24c:
	jsr tpin_0
	jsr get_par
	ldx #6		;len*64
@l:
	asl page
	rol page+1
	dex
	bne @l
	mov_n2x 64, counter		;num of bytes
	lda mode
	and #1
	bne @r
	jsr at24c_wr
@q:
	jsr tpin_1
	pha
	print_c '.'
	pla
	jmp put_cr_lf
@r:
	jsr at24c_rd
	bra @q
;
;-------------------------------------
;     CLEAR A BLOCK OF MEMORY
;-------------------------------------
BLOCK	:= $A00
N		:= $234
;

CLEAR:
	jsr sw16
	.setcpu "sweet16"
	SET R0,0		;0 FOR CLEARING WITH
	SET R1,BLOCK	;ADDRESS OF BLOCK
	SET R2,N		;# BYTES TO CLEAR
L1:
	ST @R1			;STORE IN BLOCK
	DCR R2
	BNZ L1			;NOT FINISHED YET
	RTN
;
	.setcpu "65C02"
